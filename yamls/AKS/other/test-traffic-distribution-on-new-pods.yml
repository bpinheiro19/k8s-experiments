apiVersion: v1
kind: ConfigMap
metadata:
  name: script-cm
  namespace: default
data:
  check_status.sh: |
    #!/bin/bash
    while true; do curl -s <IP> > /dev/null;  sleep 0.01; done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: script-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: script
  template:
    metadata:
      labels:
        app: script
    spec:
      containers:
      - name: ubuntu
        image: ubuntu
        command: ["/bin/bash", "-c"]
        args: ["apt-get update && apt-get install -y curl && cp /scripts/check_status.sh /tmp/check_status.sh && chmod +x /tmp/check_status.sh && /tmp/check_status.sh"]
        volumeMounts:
        - name: script-volume
          mountPath: /scripts
        resources:
          requests:
            cpu: 60m
            memory: 128Mi
          limits:
            cpu: 150m
            memory: 256Mi
      volumes:
      - name: script-volume
        configMap:
          name: script-cm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        resources:
          requests:
            cpu: 25m
            memory: 64Mi
          limits:
            cpu: 50m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: public-svc
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: nginx
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
spec:
  maxReplicas: 10 # define max replica count
  minReplicas: 2  # define min replica count
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx
  targetCPUUtilizationPercentage: 50 # target CPU utilization
